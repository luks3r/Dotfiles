# ██      ███████  Lukser (Sergei Lukaushkin)
# ██      ██       Shy. Delicate. Powerful.
# ██      ███████
# ██           ██  https://github.com/luks3r
# ███████ ███████  https://gitlab.com/lukser
#
# A custom bspwmrc for the bspwm window manager.
# https://github.com/baskerville/sxhkd
# https://github.com/baskerville/bspwm

# Common {{{

# reload sxhkd config
super + Escape
	pkill -USR1 -x sxhkd

# volume settings
XF86AudioMute
    pactl set-sink-mute 0 toggle

XF86Audio{Lower,Raise}Volume
    pactl set-sink-volume 0 {-,+}5%

{_,shift + ,super +}XF86MonBrightness{Down,Up}
    xbacklight {-10,-1,=5,+10,+1,=100}

{_,shift +,ctrl +}Print
    scrot {_,-s,-u} 'Screendhot_%Y-%m-%d_%H-%M-%S.png' -e 'mv $f ~/Pictures; feh ~/Pictures/$f'

XF86Audio{Prev,Next}
    playerctl --player spotifyd {previous,next}

XF86Audio{Stop,Play}
    playerctl --player spotifyd {stop,play-pause}

XF86AudioMicMute
    pactl set-source-mute 0 toggle

XF86Display
    bspc desktop -l next

XF86WLAN
    toggle_wifi

XF86Tools
    xfce4-settings-manager

XF86Bluetooth
    echo bluetooth

XF86Mail
    thunderbird

XF86HomePage
    brave

XF86Calculator
    galculator

XF86Search
    rofi -show drun

XF86Favorites
    brave

# }}}

# BSPWM {{{

### Basic {{{

# quit/restart bspwm
super + shift + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift} + c
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biddest node
super + g
	bspc node -s biggest

# }}}

### State | Flags {{{

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

# }}}

### Focus | Swap {{{

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }n
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} {1-9,10}

# }}}

### Preselect {{{

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel
# }}}

### Move | Resize {{{

# Smart resizing
super + ctrl + alt + {Left,Down,Up,Right}
    n=30; \
    { d1=left;   d2=right;  dx=-$n; dy=0;   \
    , d1=bottom; d2=top;    dx=0;   dy=$n;  \
    , d1=top;    d2=bottom; dx=0;   dy=-$n; \
    , d1=right;  d2=left;   dx=$n;  dy=0;   \
    } \
    bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy

# }}}

# Applications {{{

# Terminal Emulator
super + Return
	kitty

# File Manager
super + alt + f
	thunar

# Browser
super + alt + b
	brave

# NVim
super + alt + t
	kitty -e nvim

# VSCode
super + alt + c
	code
# }}}

# Runner {{{

# Dmenu
super + shift + Return
    dmenu_run --nb "#363944" --nf "#e2e2e3" --sb "#9ed072" --sf "#363944" --fon "Roboto:size=10" --font "Font Awesome 5 Free:style=Solid:size=8" --render_minheight 22
t

# Rofi
super + {r,w,e}
    rofi -show {drun,window,run}

# }}}

# }}}
